name: CI Checks
on:
  push:
    branches:
      - main
jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code into the Go module directory
        uses: actions/checkout@v2
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.20
      - name: Downloads
        run: go get -t ./...
      - name: Run Test
        run: go test -v ./...
      - name: Coverage Report
        run: make coverage
      - name: Generate Report
        run: make report
      - name: Copy Files
        run: |
          mkdir reports
          cp cover.html reports/
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: reports
  build:
    name: Build APp
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.20
      - name: Checkout code into the Go module directory
        uses: actions/checkout@v2
      - name: Build
        run: make build
      - name: Copy files
        run: |
          mkdir artifacts
          cp api artifacts/
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: artifacts
  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code into the Go module directory
        uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: api
          path: artifacts
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
        body: |
          Still in experiment
        draft: true
        prerelase: true
      - name: Upload Release Binary
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./artifacts/api
            asset_name: api
            asset_content_type: application/octet-stream
